
@{
    ViewData["Title"] = "ViewAssignedVendor";
    Layout = "~/Views/Shared/_MainLayout3.cshtml";
}



<style>

    .three-body {
        --uib-size: 35px;
        --uib-speed: 0.8s;
        --uib-color: #5D3FD3;
        position: relative;
        display: inline-block;
        height: var(--uib-size);
        width: var(--uib-size);
        animation: spin78236 calc(var(--uib-speed) * 2.5) infinite linear;
    }

    .three-body__dot {
        position: absolute;
        height: 100%;
        width: 70%;
    }

        .three-body__dot:after {
            content: '';
            position: absolute;
            height: 0%;
            width: 100%;
            padding-bottom: 100%;
            background-color: var(--uib-color);
            border-radius: 50%;
        }

        .three-body__dot:nth-child(1) {
            bottom: 5%;
            left: 0;
            transform: rotate(60deg);
            transform-origin: 50% 85%;
        }

            .three-body__dot:nth-child(1)::after {
                bottom: 0;
                left: 0;
                animation: wobble1 var(--uib-speed) infinite ease-in-out;
                animation-delay: calc(var(--uib-speed) * -0.3);
            }

        .three-body__dot:nth-child(2) {
            bottom: 5%;
            right: 0;
            transform: rotate(-60deg);
            transform-origin: 50% 85%;
        }

            .three-body__dot:nth-child(2)::after {
                bottom: 0;
                left: 0;
                animation: wobble1 var(--uib-speed) infinite calc(var(--uib-speed) * -0.15) ease-in-out;
            }

        .three-body__dot:nth-child(3) {
            bottom: -5%;
            left: 0;
            transform: translateX(116.666%);
        }

            .three-body__dot:nth-child(3)::after {
                top: 0;
                left: 0;
                animation: wobble2 var(--uib-speed) infinite ease-in-out;
            }

    @@keyframes spin78236 {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    @@keyframes wobble1 {
        0%,
        100% {
            transform: translateY(0%) scale(1);
            opacity: 1;
        }

        50% {
            transform: translateY(-66%) scale(0.65);
            opacity: 0.8;
        }
    }

    @@keyframes wobble2 {
        0%,
        100% {
            transform: translateY(0%) scale(1);
            opacity: 1;
        }

        50% {
            transform: translateY(66%) scale(0.65);
            opacity: 0.8;
        }
    }



    #fullscreen-loader {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(255,255,255,0.7); /* optional: light overlay */
        z-index: 9999;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .spinner-big {
        width: 4rem;
        height: 4rem;
        border-width: 0.5em;
    }


</style>
<div class=" container-fluid" id="bdy">
    <div class="card shadow mt-4">
        <div class="card-header py-3">
            <h6 id="header" class="m-0 font-weight-bold text-primary ">Vendor Ticket Status</h6>
        </div>   <br />
         
        <div class="row px-3">
         
            <div class="col-md-4 mb-2">
                <label for="ticket" class="form-label">Select Ticket</label>
                <select id="tickitnoid" class="form-control" name="tickitnoid" onchange="GetVendorAssigneddetails()">
                    <option value="0">All</option>

                    @if (ViewBag.tickit != null)
                    {
                        foreach (var item in ViewBag.tickit as List<SelectListItem>)
                        {
                            <option value="@item.Value">@item.Text</option>
                        }
                    }
                </select>
            </div>
            <div class="col-md-4 mb-2">
                <label for="ticket" class="form-label">Select Vendor</label>
                <select id="vendor" class="form-control" name="vendor" onchange="GetVendorAssigneddetails()">
                    <option value="0">All</option>

                    @if (ViewBag.vendor != null)
                    {
                        foreach (var item in ViewBag.vendor as List<SelectListItem>)
                        {
                            <option value="@item.Value">@item.Text</option>
                        }
                    }
                </select>
            </div>

            <div class="col-md-12">
                <div class="table-data">
                    <div id="printdiv"></div>
                </div>
            </div>

           


        </div>
    </div>
</div>
<div class="modal" id="mymodel" style="z-index:99999999" tabindex="9999">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="modal-title">Quotation Item List</h6>
                <button type="button" class="btn-close" data-bs-dismiss="modal" onclick="closemodel()" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modal-body">
                
            </div>
            <input type="hidden" id="selectticketno"/>
            <div class="col-md-6">

                <button type="button" onclick="ApproveandReview1('Vendor Approved')" class="btn btn-dark m-2" style="width:46%">Approve Quotation</button>
                <button type="button" onclick="sendMailReview1('Review Pending from Vendor')" class="btn btn-dark m-2" style="width:46%">Review Quotation</button>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="closemodel()" >Close</button>
               
            </div>
        </div>
    </div>
</div>


<div id="fullscreen-loader" class="d-none">
    <div class="spinner-border text-primary spinner-big" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
</div>







<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script type="text/javascript" charset="utf8" src="https://code.jquery.com/jquery-3.5.1.js"></script>
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.1/css/select2.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.1/js/select2.min.js"></script>

<script src="~/js/QoutatoinList.js"></script>
<script type="text/javascript">
    $("#tickitnoid").select2();
    $("#vendor").select2();

    $(document).ready(() => {
        GetVendorAssigneddetails()
    });


    function getURL() {
        const hostname = window.location.hostname;
        if (hostname == "localhost") {
            return '';
        }
        else {
            return '/Ticketing';
        }

    };
    var myurl = getURL();
    function closemodel (){
        $("#mymodel").hide();
    }
    function GetVendorAssigneddetails(){
       var  tickitno= $("#tickitnoid").val()
        $.ajax({
            url: myurl + '/Master/GetAssignedVendor',

            type: 'Get',
            data: {
                    tickitno: tickitno,
                vendor: $("#vendor").val()

            },
            success: function (data) {

                $("#printdiv").empty();
                data = JSON.parse(data);
                console.log(data)
                if (data.length > 0) {
                     
                    CreateTableFromArray(data, 'printdiv')
                }
             

            },
            error: function (data) {

                var data = {
                    status: "Error",
                    msg: "Error on server.",
                    data: [],
                }

            },
        });

    }


    function CreateTableFromArray(arrItems, divid) {
        let col = [];
        for (let i = 0; i < arrItems.length; i++) {
            for (let key in arrItems[i]) {
                if (col.indexOf(key) === -1) {
                    col.push(key);
                }
            }
        }

        // Create a Table.
        let table = document.createElement("table");
        table.setAttribute('id', 'data-table');
        table.setAttribute('class', 'table table-bordered');
        // Create table header row.

        let tr = table.insertRow(-1)	// table row.

        for (let i = 0; i < col.length; i++) {
            let th = document.createElement('th');  // table header.
            //console.log(col[i]);
            th.innerHTML = col[i];
            var result = col[i].includes("Hid_") == true ? 'none' : '';
            tr.appendChild(th);
            th.setAttribute('style',
                'font:18px Calibri;border: solid 1px #DDD;' +
                'border-collapse: collapse; font-weight:bold;' +
                'padding: 2px 3px; text-align:center ;' +
                'display:' + result + ';'
            );
        }

        // Add JSON to the table as rows.
        for (let z = 0; z < arrItems.length; z++) {
            tr = table.insertRow(-1);

            for (let j = 0; j < col.length; j++) {
                let tabCell = tr.insertCell(-1);
                var result = col[j].includes("Hid_") == true ? 'none' : '';
                tabCell.innerHTML = arrItems[z][col[j]];
                tabCell.setAttribute('style',
                    'font:18px Calibri;border: solid 1px #DDD;' +
                    'border-collapse: collapse; ' +
                    'padding: 2px 3px; text-align: ;' +
                    'display:' + result + ';'
                );
                tabCell.setAttribute('class', "" + col[j].replace(" ", "").replace(" ", "") + "");
                tabCell.setAttribute('id', "" + col[j].replace(" ", "").replace(" ", "") + "" + z + "");

            }
        }

        // Show the table.
        let container = document.getElementById('' + divid + '');
        if (container != null) {
            container.appendChild(table);
        }


        $('#filterInput').on('keyup', function () {
            let filter = $(this).val().toUpperCase();


            $('#data-table tbody tr').each(function (index) {
                if (index === 0) return;

                let row = $(this);
                let match = false;

                // Check each cell in the row
                row.find('td').each(function () {
                    if ($(this).text().toUpperCase().indexOf(filter) > -1) {
                        match = true;
                        return false;
                    }
                    else {
                        row.add('<tr><td>Not Found</td></tr>')
                    }
                });


                row.toggle(match);
            });
        });

    }


    function viewmodel(id) {

        $.ajax({
            url: myurl+'/Master/GetItem',

            type: 'Get',
            data: {
                tickitno: id,
            

            },
            success: function (data) {

                $("#mymodel").show();
                $("#modal-body").empty();
                data = JSON.parse(data);
                console.log(data)
                if (data.length > 0) {
                    $("#selectticketno").val(id)
                    CreateTableFromArray(data, 'modal-body')
                }


            },
            error: function (data) {

                var data = {
                    status: "Error",
                    msg: "Error on server.",
                    data: [],
                }

            },
        });

    }
    function ApproveandReview1(id) {
        $("#mymodel").hide();
        $("#fullscreen-loader").removeClass("d-none");
        var tickitnoid = $('#selectticketno').val();
        //var htmldata= retundhtml(tickitnoid)

        $.ajax({
            url: myurl + '/QMS/ApprovedAndReview1',

            type: 'post',
            data: {
                ticketno: tickitnoid,
                type: id,

            },
            success: function (data) {
                $("#fullscreen-loader").addClass("d-none");
                Swal.fire({
                    title: "success",
                    html: data.message,
                    icon: "success",
                    confirmButtonText: 'OK'
                }).then(function () {
                    location.reload();
                });
            },
            error: function (data) {
                $("#fullscreen-loader").addClass("d-none");
                var data = {
                    status: "Error",
                    msg: "Error on server.",
                    data: [],
                }

            },
        });
    }
    function sendMailReview1(id) {
        $("#mymodel").hide();
    
        $("#fullscreen-loader").removeClass("d-none");
        var tickitnoid = $('#selectticketno').val();
        //var htmldata= retundhtml(tickitnoid)

        $.ajax({
            url: myurl + '/QMS/ReviewToMail',

            type: 'post',
            data: {
                ticketno: tickitnoid,
                type: id,

            },
            success: function (data) {

                $("#fullscreen-loader").addClass("d-none");
                Swal.fire({
                    title: "success",
                    html: data.message,
                    icon: "success",
                    confirmButtonText: 'OK'
                }).then(function () {
                    location.reload();
                });
            },
            error: function (data) {

                $("#fullscreen-loader").addClass("d-none");
                var data = {
                    status: "Error",
                    msg: "Error on server.",
                    data: [],
                }

            },
        });
    }


</script>




